---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import TableOfContent from "../components/table-of-content/TableOfContent.astro";
import { useTranslations } from "../i18n/utils";
type Props = {
  lang: string;
  description: string;
  readingTime: any;
  headings: {
    slug: string;
    text: string;
    depth: number;
  }[];
} & CollectionEntry<"articles">["data"];

const {
  id,
  lang,
  title,
  pubDate,
  description,
  updatedDate,
  heroImage,
  author,
  headings,
  readingTime,
} = Astro.props;

const t = useTranslations(lang);

headings?.push({ depth: 2, slug: "comments", text: t("article.comments") });
---

<html lang={lang}>
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        display: flex;
        flex-direction: row;
        max-width: none;
        justify-content: space-between;

        div,
        aside {
          flex: 1;
        }

        aside {
          flex: 1;
          width: 300px;
          padding: var(--padding);

          nav {
            position: sticky;
            top: calc(var(--header-height) + 32px);
          }
        }
      }
      .article {
        max-width: 800px;
        padding: var(--padding);

        h1 {
          color: var(--accent);
        }

        #comments {
          visibility: hidden;
        }
      }
      .giscus {
        padding: 16px 0;
      }
      .hero-image {
        width: 100%;
        max-width: 100%;
        border-radius: var(--border-radius);
        margin: auto;
        display: block;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: var(--border-radius);
      }
      .title {
        text-align: left;
      }
      .title h1 {
        margin: 0 0 16px 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }

      @media (max-width: 600px) {
        main {
          padding: 0;
          padding-top: 88px;
        }
      }

      @media (max-width: 900px) {
        main {
          justify-content: center;
          flex-direction: column-reverse;

          aside {
            width: 100%;
            padding: 0;
          }
        }
      }

      ::global(.dark-theme) {
        .article {
          background-color: var(--background);
        }
      }
    </style>
  </head>

  <body>
    <Header />

    <main>
      <div></div>
      <article class="article">
        <div class="title">
          <h1>{title}</h1>
          <div class="date">
            <span>{author ? author : "Dylan Deruy"} |</span>
            <FormattedDate lang={lang} date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on{" "}
                  <FormattedDate lang={lang} date={updatedDate} />
                </div>
              )
            }
          </div>

          <hr />
        </div>
        {
          heroImage && (
            <img
              transition:animate="initial"
              transition:name={`article-${id}`}
              class="hero-image"
              src={heroImage}
              alt=""
            />
          )
        }
        <p>{description}</p>

        <slot />

        <h4 id="comments">Comments</h4>
        <section class="giscus"></section>
      </article>
      <aside class="main__aside">
        <TableOfContent {headings} />
      </aside>

      <script is:inline>
        (() => {
          let giscusTheme = getGiscusTheme(getPreferedTheme());
          let giscusAttributes = {
            src: "https://giscus.app/client.js",
            "data-repo": "Lougnar/dylanderuy",
            "data-repo-id": "R_kgDOLX3-_w",
            "data-category": "Blog posts comments",
            "data-category-id": "DIC_kwDOLX3-_84Cd2DO",
            "data-mapping": "url",
            "data-strict": "0",
            "data-reactions-enabled": "1",
            "data-emit-metadata": "0",
            "data-input-position": "bottom",
            "data-theme": giscusTheme,
            "data-lang": document.documentElement.lang,
            "data-loading": "lazy",
            crossorigin: "anonymous",
            async: "",
          };

          let giscusScript = document.createElement("script");
          Object.entries(giscusAttributes).forEach(([key, value]) =>
            giscusScript.setAttribute(key, value)
          );
          document.body.appendChild(giscusScript);
        })();
      </script>
    </main>
    <Footer />
  </body>
</html>
