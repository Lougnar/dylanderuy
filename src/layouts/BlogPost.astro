---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = {
  lang: string;
  description: string;
} & CollectionEntry<"articles">["data"];

const { lang, title, pubDate, description, updatedDate, heroImage, author } =
  Astro.props;
---

<html lang={lang}>
  <head>
    <BaseHead title={title} description={description} />
    <style>
      .article {
        background-color: white;
        padding: var(--padding);
        border: var(--layout-border);
        border-radius: var(--border-radius);

        h1 {
          color: var(--accent);
        }
      }
      .giscus {
        padding: 16px 0;
      }
      .hero-image {
        width: 100%;
        max-width: 700px;
        border-radius: var(--border-radius);
        margin: auto;
        display: block;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: var(--border-radius);
      }
      .title {
        padding: 1em 0;
        text-align: left;
      }
      .title h1 {
        margin: 0 0 16px 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }

      main {
        padding: 16px;
      }

      @media (max-width: 600px) {
        main {
          padding: 0;
        }
      }

      ::global(.dark-theme) {
        .article {
          background-color: var(--background);
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article class="article">
        <div class="title">
          <h1>{title}</h1>
          <div class="date">
            <span>{author ? author : "Dylan Deruy"} |</span>
            <FormattedDate lang={lang} date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on{" "}
                  <FormattedDate lang={lang} date={updatedDate} />
                </div>
              )
            }
          </div>

          <hr />
        </div>
        {heroImage && <img class="hero-image" src={heroImage} alt="" />}
        <p>{description}</p>
        <slot />
      </article>
      <section id="comments" class="giscus"></section>
      <script is:inline>
        let giscusTheme = getGiscusTheme(getPreferedTheme());
        let giscusAttributes = {
          src: "https://giscus.app/client.js",
          "data-repo": "Lougnar/dylanderuy",
          "data-repo-id": "R_kgDOLX3-_w",
          "data-category": "Blog posts comments",
          "data-category-id": "DIC_kwDOLX3-_84Cd2DO",
          "data-mapping": "url",
          "data-strict": "0",
          "data-reactions-enabled": "1",
          "data-emit-metadata": "0",
          "data-input-position": "bottom",
          "data-theme": giscusTheme,
          "data-lang": document.documentElement.lang,
          "data-loading": "lazy",
          crossorigin: "anonymous",
          async: "",
        };

        let giscusScript = document.createElement("script");
        Object.entries(giscusAttributes).forEach(([key, value]) =>
          giscusScript.setAttribute(key, value)
        );
        document.body.appendChild(giscusScript);
      </script>
    </main>
    <Footer />
  </body>
</html>
