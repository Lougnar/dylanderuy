---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
import { getLangFromUrl, useTranslations } from "../i18n/utils";
import LanguagePicker from "./LanguagePicker.astro";
import SearchBar from "./SearchBar.astro";
import { getRelativeLocaleUrl } from "astro:i18n";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<header>
  <a class="header__logo" href="/">
    <img height="66" src="/icons/logo.png" alt="Dylan toon photo" />
    <h2>
      {SITE_TITLE}
    </h2>
  </a>
  <nav id="header__nav" class="header__nav">
    <div class="header__internal-links">
      <HeaderLink href={getRelativeLocaleUrl(lang, "/")}>
        {t("nav.blog")}
      </HeaderLink>
      <HeaderLink href={getRelativeLocaleUrl(lang, "/about/")}>
        {t("nav.about")}
      </HeaderLink>
    </div>
    <div class="header__tools">
      <button id="header__theme" class="header__theme">
        <svg
          id="header__dark-mode"
          xmlns="http://www.w3.org/2000/svg"
          height="32"
          viewBox="0 -960 960 960"
          width="32"
          ><path
            fill="currentColor"
            d="M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Zm0-80q88 0 158-48.5T740-375q-20 5-40 8t-40 3q-123 0-209.5-86.5T364-660q0-20 3-40t8-40q-78 32-126.5 102T200-480q0 116 82 198t198 82Zm-10-270Z"
          ></path></svg
        >
        <svg
          id="header__light-mode"
          xmlns="http://www.w3.org/2000/svg"
          height="32"
          viewBox="0 -960 960 960"
          width="32"
          ><path
            fill="currentColor"
            d="M480-360q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Zm326-268Z"
          ></path></svg
        >
      </button>

      <SearchBar />
      <LanguagePicker />
    </div>
  </nav>
  <img id="header__menu-icon" class="header__menu-icon" src="/icons/menu.svg" />
</header>
<script>
  const darkTheme = "dark-theme";
  const lightTheme = "light-theme";

  function setTheme(theme) {
    theme = assertTheme(theme);

    if (theme === null) {
      return;
    }

    const darkButton = document.getElementById("header__dark-mode");
    const lightButton = document.getElementById("header__light-mode");

    if (!(darkButton && lightButton)) {
      return;
    }

    if (theme === darkTheme) {
      darkButton.style.display = "none";
      lightButton.style.display = "block";
      document.body.classList.remove("light-theme");
      document.body.classList.add("dark-theme");
    } else {
      darkButton.style.display = "block";
      lightButton.style.display = "none";
      document.body.classList.add("light-theme");
      document.body.classList.remove("dark-theme");
    }

    localStorage.setItem("theme", theme);
  }

  function assertTheme(theme) {
    if (!theme || (theme !== darkTheme && theme !== lightTheme)) {
      return null;
    }

    return theme;
  }

  function getPreferedTheme() {
    const systemPref = window.matchMedia(
      "(prefers-color-scheme: dark)"
    ).matches;
    const websitePref = localStorage.getItem("theme");

    let theme = assertTheme(websitePref);

    if (!theme) {
      theme = assertTheme(systemPref);
    }

    return theme ?? lightTheme;
  }

  setTheme(getPreferedTheme());

  (() => {
    const ACTIVE_CLASS = "header__menu-icon-active";
    const NAV_OPEN_CLASS = "header__nav--open";

    const menu = document.getElementById("header__menu-icon");
    const nav = document.getElementById("header__nav");

    if (!(menu && nav)) {
      return;
    }

    menu.addEventListener("click", () => {
      if (menu.classList.contains(ACTIVE_CLASS)) {
        menu.classList.remove(ACTIVE_CLASS);
        nav.classList.remove(NAV_OPEN_CLASS);
        return;
      }

      menu.classList.add(ACTIVE_CLASS);
      nav.classList.add(NAV_OPEN_CLASS);
    });
  })();

  (() => {
    const themeButton = document.getElementById("header__theme");

    if (!themeButton) {
      return;
    }

    // toggle theme
    themeButton.addEventListener("click", () => {
      const theme = getPreferedTheme();
      const newTheme = theme === darkTheme ? lightTheme : darkTheme;
      setTheme(newTheme);
    });
  })();
</script>
<style>
  header {
    height: 72px;
    margin: 0;
    padding: 0 16px;
    background: var(--header-background);
    border-bottom: var(--layout-border);
    box-shadow: 0 2px 8px rgba(black, 5%);
    display: flex;
    flex-direction: row;
    align-items: center;
    width: 100%;
    gap: 16px;

    a,
    a.active {
      text-decoration: none;
    }
  }

  .header__internal-links {
    flex: 1;
    display: flex;
    justify-content: center;

    a {
      padding: 0 0.5em;
    }
  }

  .header__theme {
    background: transparent;
    border: none;
    cursor: pointer;
    color: var(--color);

    .header__dark-mode,
    .header__light-mode {
      display: none;
    }
  }

  .header__tools {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .header__menu-icon {
    display: none;
    height: 80%;
    padding: 4px;
    margin-left: auto;
    cursor: pointer;

    &.header__menu-icon-active {
      border-bottom: 4px solid transparent;
      border-bottom-color: var(--accent);
    }
  }

  .header__logo {
    display: flex;
    flex-direction: row;
    gap: 8px;
    align-items: center;

    h2 {
      margin: 0;
      font-size: 20px;
      color: var(--color);

      a,
      a.active {
        text-decoration: none;
      }
    }
  }

  .header__nav {
    display: flex;
    align-items: center;
    gap: 16px;
    flex: 1;

    a {
      color: var(--color);
      border-bottom: 4px solid transparent;
      text-decoration: none;

      &.active {
        text-decoration: none;
        border-bottom-color: var(--accent);
      }
    }
  }

  @media (max-width: 900px) {
    .header__menu-icon {
      display: block;
    }

    .header__nav {
      display: none;
      position: absolute;
      z-index: 100;
      flex-direction: column-reverse;
      gap: 16px;
      padding: 16px;
      background-color: white;
      width: 100%;
      top: 72px;
      left: 0;
      right: 0;
      box-shadow: 0 2px 8px rgba(var(black), 5%);

      &.header__nav--open {
        display: flex;
      }

      .header__internal-links {
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
        font-size: 24px;
        gap: 16px;
      }

      .header__tools {
        justify-content: center;
        flex-wrap: wrap-reverse;
      }
    }
  }
</style>
